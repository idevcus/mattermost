name: Build and Push Mattermost Enterprise Edition

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  IMAGE_NAME: idevcus/mattermost-enterprise-edition
  # DOCKER_CONTEXT: server/build/docker
  working-directory: server/build

jobs:
  build-and-push:
    runs-on: okrbest-runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive # important: enterprise code imports mattermost-server as a submodule

      - name: Print current directory
        run: |
          echo "Current directory: $(pwd)"

      - name: Build mattermost webapp
        run: |
          sudo apt update -y && sudo apt install -y build-essential
          make setup-go-work build-client build-linux-amd64
          rm -rf build/dist
          mkdir -p build/dist/{server,client}
          cp -rf ./bin/linux_amd64/* build/dist/server
          cp -rf ../webapp/channels/dist/* build/dist/client
          echo "✅ Mattermost Server & Webapp build complete!"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_DEV_USERNAME }}
          password: ${{ secrets.DOCKERHUB_DEV_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.working-directory }}
          provenance: false
          file: server/build/Dockerfile
          push: true
          pull: true
          tags: ${{ env.IMAGE_NAME }}:latest
          build-args: |
            EDITION=enterprise

      - name: Image digest
        run: |
          echo "Image pushed: ${{ env.IMAGE_NAME }}:latest"

      - name: Sleep for 5 seconds
        run: |
          sleep 5

  deploy:
    name: Deploy to Remote Linux Server
    needs: build-and-push
    runs-on: okrbest-runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive # important: enterprise code imports mattermost-server as a submodule

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.REMOTE_SERVER_SSH_PRIVATE_KEY }}

      - name: Deploy to Remote Server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_SSH_USER }}@${{ secrets.REMOTE_SERVER_IP }} << 'EOF'
          cd /home/ubuntu/docker
          docker compose -f docker-compose-idevcus.yml -f docker-compose.without-nginx.yml down
          docker image rm -f idevcus/mattermost-enterprise-edition:latest
          docker compose -f docker-compose-idevcus.yml -f docker-compose.without-nginx.yml up -d
          echo "✅ Deployment complete!"
          EOF
